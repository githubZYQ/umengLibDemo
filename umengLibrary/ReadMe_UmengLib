Umeng官方文档：https://developer.umeng.com/sdk/android
统计：https://developer.umeng.com/docs/119267/detail/118584
Push：https://developer.umeng.com/docs/67966/detail/153908
高级（自定义图标、通知音、通知栏样式、打开动作等）：https://developer.umeng.com/docs/67966/detail/98583
厂商通道（离线推送、厂商push信息申请注册）：https://developer.umeng.com/docs/67966/detail/98589
==================================================================================================

一、清单配置（${applicationId}换为自己主工程的包名）
<receiver
android:name="com.taobao.agoo.AgooCommondReceiver"
android:exported="true"
android:process=":channel">
<intent-filter>
<action android:name="${applicationId}.intent.action.COMMAND" />
</intent-filter>
<intent-filter>
<action android:name="android.intent.action.PACKAGE_REMOVED" />
<data android:scheme="package" />
</intent-filter>
</receiver>

<provider
android:name="com.umeng.message.provider.MessageProvider"
android:authorities="${applicationId}.umeng.message"
android:exported="false">
<grant-uri-permission android:pathPattern=".*" />
</provider>
==================================================================================================

二、资源配置
需要自定义默认的logo图片、通知音等可参考官方文档放置资源

（可选，未集成魅族push可跳过）魅族手机配置系统通知图标
请在drawable目录下添加一个图标，命名为stat_sys_third_app_notify.png，建议尺寸64px * 64px，图标四周留有透明。若不添加此图标，可能在部分魅族手机上无法弹出通知。
==================================================================================================

三、初始化配置
//（有推送才需要）注：该方法是【友盟+】Push后台进行日活统计及多维度推送的必调用方法，请务必调用！
//在所有的Activity 的onCreate 方法或在应用的BaseActivity的onCreate方法中添加：
PushAgent.getInstance(context).onAppStart();
 String appKey ="";
        String appSecret ="";
        new UMengBuilder()
                //关闭日志输出
                .setOpenLog(false)
                //配置app信息
                .setAppkey(appKey,appSecret)
                //推送注册回调
                .setRegisterCallback(new IUmengRegisterCallback() {
                    @Override
                    public void onSuccess(String s) {
                    }
                    @Override
                    public void onFailure(String s, String s1) {
                    }
                })
                //（可选）开启厂商推送（请参考官方文档去申请配置各平台的id和key）
                //华为
                .huaweiPush(true)
                //vivo
                .vivoPush(true)
                //小米
                .setMiId("小米ID","小米Key")
                //魅族
                .setMeizuId("魅族ID","魅族Key")
                //oppo
                .setOPPOKey("oppoKey","oppoSecret")

                //设置自定义通知栏样式.点击统计等
                .setMessageHandler(messageHandler)
                //自定义点击后的打开动作
                .setNotificationClickHandler(notificationClickHandler)

                //最后执行初始化操作
                .build(application);
==================================================================================================

四、混淆配置
如果项目开启打包混淆，需要添加如下混淆代码，如果未开启混淆可忽略跳过。
-keep public class [您的应用包名].R$*{
public static final int *;
}
-keep class com.umeng.** {*;}

-keep class com.uc.** {*;}

-keepclassmembers class * {
   public <init> (org.json.JSONObject);
}
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}
-keep class com.zui.** {*;}
-keep class com.miui.** {*;}
-keep class com.heytap.** {*;}
-keep class a.** {*;}
-keep class com.vivo.** {*;}

-dontwarn com.umeng.**
-dontwarn com.taobao.**
-dontwarn anet.channel.**
-dontwarn anetwork.channel.**
-dontwarn org.android.**
-dontwarn org.apache.thrift.**
-dontwarn com.xiaomi.**
-dontwarn com.huawei.**
-dontwarn com.meizu.**

-keepattributes *Annotation*

-keep class com.taobao.** {*;}
-keep class org.android.** {*;}
-keep class anet.channel.** {*;}
-keep class com.umeng.** {*;}
-keep class com.xiaomi.** {*;}
-keep class com.huawei.** {*;}
-keep class com.meizu.** {*;}
-keep class org.apache.thrift.** {*;}
-keep class org.android.agoo.* {*;}

-keep class com.alibaba.sdk.android.**{*;}
-keep class com.ut.**{*;}
-keep class com.ta.**{*;}

-keep public class **.R$*{
   public static final int *;
}
=====================================================================================================

五.厂商、离线推送配置(不需要厂商推送可以忽略,可根据集成注册了哪些厂商自由选择)
厂商push（信息申请注册）：https://developer.umeng.com/docs/67966/detail/98589

//魅族厂商通道（不需要可跳过）
 1.自定义Recevier组件受魅族接入方式限制，必须在包名目录实现一个自定义Recevier，继承自MeizuPushReceiver，例如：
 public class MeizuTestReceiver extends MeizuPushReceiver {
 }）
 2.配置系统通知图标
请在drawable目录下添加一个图标，命名为stat_sys_third_app_notify.png，建议尺寸64px * 64px，图标四周留有透明。若不添加此图标，可能在部分魅族手机上无法弹出通知。

<!-- 厂商通道清单配置，不需要时可不配置 ${applicationId}更换为自己包名-->
 <!-- 华为push -->
<meta-data
 android:name="com.huawei.hms.client.appid"
android:value="appid=华为pushid" />
<!-- vivo push参数声明 -->
<!-- vivo start -->
<meta-data
android:name="com.vivo.push.api_key"
android:value="你的VIVO appkey" />
<meta-data
android:name="com.vivo.push.app_id"
android:value="你的VIVO appID" />
<!-- VIVO end -->
<!--魅族push应用定义消息receiver声明 start -->
<receiver android:name="${applicationId}.MeizuTestReceiver">
<intent-filter>
<!-- 接收push消息 -->
<action android:name="com.meizu.flyme.push.intent.MESSAGE" />
<!-- 接收register消息 -->
<action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
<!-- 接收unregister消息-->
<action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
<!-- 兼容低版本Flyme3推送服务配置 -->
<action android:name="com.meizu.c2dm.intent.REGISTRATION" />
<action android:name="com.meizu.c2dm.intent.RECEIVE" />
<category android:name="${applicationId}"></category>
</intent-filter>
</receiver>
<!--魅族push应用定义消息receiver声明 end-->

接收离线推送消息：
第一步项目中新建TestMiPushActivity extends UmengNotifyClickActivity;
第二部重写onMessage获取MESSAGE_BODY，解析成UmengMessageBody对象，即可获取相关离线信息，之后根据MessageBody信息自行处理
@Override
public void onMessage(Intent intent) {
    //此方法必须调用，否则无法统计打开数
    super.onMessage(intent);
    try {
        //body示例
        String body = intent.getStringExtra(AgooConstants.MESSAGE_BODY);
        // UmengMessageBody messageBody 可以通过body解析成UmengMessageBody，完成自定义的一系列动作
        finish();
    } catch (Exception e) {
        e.printStackTrace();
    }
}

